rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check ownership
    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    // Users can only read/write their own profile.
    // Public profiles can be read by anyone if explicitly set.
    match /users/{userId} {
      allow read: if isOwner(userId) || resource.data.preferences.privacy.profileVisibility == 'public';
      allow create, update: if isOwner(userId);
      allow delete: if isOwner(userId);
    }

    // Characters can be read if they are public, or if the requester is the owner.
    // Characters can only be created, updated, or deleted by their owner.
    match /characters/{characterId} {
      allow read: if (request.auth.uid != null && request.auth.uid == resource.data.meta.userId) || resource.data.meta.status == 'public';
      allow create: if request.auth.uid == request.resource.data.meta.userId;
      allow update, delete: if request.auth.uid == resource.data.meta.userId;
    }
    
    // DataPacks and Stories are world-readable.
    // Writes are handled by secure server-side actions.
    match /datapacks/{packId} {
        allow read: if true;
        allow write: if false;
    }
    
    match /storyCasts/{castId} {
        allow read: if isOwner(resource.data.userId);
        allow create, update, delete: if isOwner(request.resource.data.userId);
    }
    
    match /settings/{settingId} {
        allow read: if true;
        allow write: if false; // Only admin server can write
    }
    
    match /ai_models/{modelId} {
        // System models (no userId) are readable by all.
        // User-specific models are readable only by the owner.
        allow read: if resource.data.userId == null || isOwner(resource.data.userId);
        
        // Users can create/update/delete their own models.
        allow create, update, delete: if isOwner(request.resource.data.userId);
    }
  }
}
