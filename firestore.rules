
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // Matches any document in the 'users' collection.
    match /users/{userId} {
      // Users can only read and write to their own document.
      allow read, update: if isOwner(userId);
      // A user can only create their own user document.
      allow create: if isOwner(userId);
    }

    // Matches any document in the 'characters' collection.
    match /characters/{characterId} {
      // Anyone can read a character document if its status is 'public'.
      // The owner can read it regardless of status.
      allow read: if resource.data.status == 'public' || isOwner(resource.data.userId);

      // A user can create a character if they are authenticated and the new
      // character's userId matches their own auth uid.
      // Also validates incoming data.
      allow create: if isAuthenticated() && isOwner(request.resource.data.userId)
                    && request.resource.data.name is string
                    && request.resource.data.name.size() > 0
                    && request.resource.data.description is string
                    && request.resource.data.biography is string
                    && request.resource.data.imageUrl is string
                    && request.resource.data.status in ['private', 'public']
                    && request.resource.data.createdAt == request.time;

      // The owner of a character can update it.
      // We also prevent certain fields from being changed.
      allow update: if isOwner(resource.data.userId)
                    && request.resource.data.name is string
                    && request.resource.data.biography is string
                    // Prevent ownership or creation timestamp from being changed
                    && request.resource.data.userId == resource.data.userId
                    && request.resource.data.createdAt == resource.data.createdAt;

      // The owner of a character can delete it.
      allow delete: if isOwner(resource.data.userId);
    }

    // Disallow any other access to the database
    match /{document=**} {
      allow read, write: if false;
    }
  }
}
