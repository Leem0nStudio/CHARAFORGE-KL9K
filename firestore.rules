rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    function isPublic() {
      return resource.data.status == 'public';
    }

    //
    // Rules for the 'users' collection
    //
    match /users/{userId} {
      // Anyone authenticated can read a user's profile
      allow read: if isAuthenticated();

      // Only the user themselves can create their own document
      allow create: if isOwner(userId);

      // Only the user themselves can update their document
      allow update: if isOwner(userId);

      // Users cannot delete their own documents directly through a client request.
      // Deletions should be handled by a trusted server environment (e.g., Cloud Function or Server Action).
      allow delete: if false;
    }

    //
    // Rules for the 'characters' collection
    //
    match /characters/{characterId} {
      // Allow read access if the character is public OR if the requesting user is the owner
      allow read: if isPublic() || (isAuthenticated() && isOwner(resource.data.userId));

      // Allow any authenticated user to create a new character
      allow create: if isAuthenticated();

      // Allow update and delete only for the user who owns the character
      allow update, delete: if isAuthenticated() && isOwner(resource.data.userId);
    }
  }
}
