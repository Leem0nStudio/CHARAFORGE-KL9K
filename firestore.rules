rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is an admin
    function isAdmin() {
      return get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == 'admin';
    }

    // Rules for the 'users' collection
    match /users/{userId} {
      // Anyone can read non-sensitive public profile data (e.g., for creator lists)
      allow read: if request.auth != null;

      // Only the user themselves can create their own document
      allow create: if request.auth.uid == userId;

      // The user can update their own document. An admin can also update roles.
      allow update: if request.auth.uid == userId || isAdmin();
      
      // The user can delete their own account.
      allow delete: if request.auth.uid == userId;
    }

    // Rules for the 'characters' collection
    match /characters/{characterId} {
      // Allow reading a character if it is public, or if the user is the owner.
      allow read: if resource.data.status == 'public' || (request.auth != null && request.auth.uid == resource.data.userId);

      // Allow creating a character if the user is logged in and the character's userId matches their own.
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;

      // Allow updating a character if the user is the owner.
      allow update: if request.auth != null && request.auth.uid == resource.data.userId;

      // Allow deleting a character if the user is the owner.
      allow delete: if request.auth != null && request.auth.uid == resource.data.userId;
    }
  }
}
